name: Build and Test

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:  # Allows manual triggering
    inputs:
      force_clear_cache:
        description: "Set to true to clear the Gradle cache"
        required: false
        default: "false"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout source code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      # Step 3: Ensure Gradlew has executable permissions
      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      # Step 4: Cache Gradle dependencies (only for non-main branches)
      - name: Cache Gradle dependencies
        if: github.ref_name != 'main'  # Only cache for branches other than 'main'
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ github.ref_name }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ github.ref_name }}-

      # Step 5: Force clear cache if requested
      - name: Force clear cache
        if: github.ref_name != 'main' && github.event.inputs.force_clear_cache == 'true'
        run: rm -rf ~/.gradle/caches

      # Step 6: Build the project
      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      # Step 7: Run tests
      - name: Run tests
        run: ./gradlew test --no-daemon